# Not sure if changing the name will break any volumes, so I'm leaving it as is.
name:  paperless

services:
  dashy:
    # To build from source, replace 'image: lissy93/dashy' with 'build: .'
    # build: .
    image: lissy93/dashy:latest
    container_name: dashy
    # Pass in your config file below, by specifying the path on your host machine
    volumes:
      - dashy-app:/app/
    depends_on:
      - ts-dashy
    # Set any environmental variables
    environment:
      NODE_ENV: production
      # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
      UID: 0
      GID: 0
    # Specify restart policy
    restart: unless-stopped
    # Connect to the Tailscale network
    network_mode: service:ts-dashy
    # Configure healthchecks
    healthcheck:
      test: [ 'CMD', 'node', '/app/services/healthcheck' ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    mem_limit: 2000m # Used only occasionally in builds

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v8.12.7
    network_mode: service:ts-dozzle
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    mem_limit: 128m

  glances:
    image: nicolargo/glances:latest
    container_name: glances
    platform: linux/arm64
    restart: unless-stopped
    privileged: true
    network_mode: service:ts-glances
    depends_on:
      - ts-glances
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w -t 5
      - PUID=0
      - PGID=0
      - TZ=Europe/Amsterdam
    mem_limit: 512m

  qbittorrent:
    image: linuxserver/qbittorrent:5.0.4
    container_name: qbittorrent
    platform: linux/arm64
    network_mode: service:ts-qbittorrent
    depends_on:
      - ts-qbittorrent
    security_opt:
      - seccomp:unconfined # Because error code 159 keeps showing up otherwise
    environment:
      - PUID=116
      - PGID=125
      - TZ=Etc/UTC
    volumes:
      - qbittorrent-config:/config
      - /media/external/windows/Music:/music
      - /media/external/windows/Video:/video
    restart: unless-stopped
    mem_limit: 1024m

  jellyfin:
    image: jellyfin/jellyfin:10.11.0-rc1
    container_name: jellyfin
    platform: linux/arm64
    user: 116:125
    network_mode: service:ts-jellyfin
    depends_on:
      - ts-jellyfin
    security_opt:
      - seccomp:unconfined # Because error code 159 keeps showing up otherwise
    volumes:
      - jellyfin-config:/config
      - jellyfin-cache:/cache
      - /media/external/windows/Music:/media/music
      - /media/external/windows/Books:/media/books
      - /media/external/windows/Radio:/media/radio
      - /media/external/windows/Video:/media/video
    restart: 'unless-stopped'
    mem_limit: 2000m

  it-tools:
    image: 'ghcr.io/corentinth/it-tools:latest'
    container_name: it-tools
    platform: linux/arm64
    security_opt:
      - seccomp:unconfined
    network_mode: service:ts-it-tools
    depends_on:
      - ts-it-tools
    restart: unless-stopped
    mem_limit: 250m

  filebrowser:
    image: 'filebrowser/filebrowser:v2.32.0-s6'
    container_name: filebrowser
    platform: linux/arm64
    security_opt:
      - seccomp:unconfined
    network_mode: service:ts-filebrowser
    depends_on:
      - ts-filebrowser
    environment:
      - PUID=116
      - PGID=125
      - TZ=Etc/UTC
    volumes:
      - '/media/external/windows/:/srv'
      - './filebrowser/settings.json:/config/settings.json'
      # Database produced after running the following:
      # `filebrowser config set --auth.method=noauth`
      # `docker cp filebrowser-filebrowser-1:/database/filebrowser.db.bak filebrowser/filebrowser/filebrowser.db.bak
      - './filebrowser/filebrowser.db:/database/filebrowser.db'
    mem_limit: 250m

  grist:
    image: gristlabs/grist:1.5.2 # https://hub.docker.com/r/gristlabs/grist/tags
    container_name: grist
    platform: linux/arm64
    security_opt:
      - seccomp:unconfined # Because error code 159 keeps showing up otherwise
    user: 0:0
    network_mode: service:ts-grist
    env_file:
      - ./grist/public.env
    environment:
      APP_HOME_URL: "https://sheets.${TS_DOMAIN}"
    volumes:
      - grist_data:/persist
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8484/" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    mem_limit: 500m

  speedtest:
    image: lscr.io/linuxserver/speedtest-tracker:v1.5.0-ls91 # Public dashboard broken and sellout to Apprise after 1.6.0
    container_name: speedtest
    platform: linux/arm64
    security_opt:
      - seccomp:unconfined # Because error code 159 keeps showing up otherwise
    network_mode: service:ts-speedtest
    # We have to bind this in because by default they enable a 443 listener which keeps complaining due to Tailscale already using it
    volumes:
      - ./speedtest/nginx.conf:/config/nginx/site-confs/default.conf:ro
    environment:
      - PUID=1000
      - PGID=1000
      # seCuRiTy lmao: https://docs.speedtest-tracker.dev/security/encryption
      - APP_KEY=base64:BlHsZAQoZaeNRYgVbLd3vaLcKH6D/+EFce+ADK0jb8g=
      - DB_CONNECTION=sqlite
      - PUBLIC_DASHBOARD=true
      - SPEEDTEST_SCHEDULE=*/15 * * * *  # Every 15 minutes
      - DISPLAY_TIMEZONE=Europe/Amsterdam
    healthcheck:
      test: curl -fSs APP_URL/api/healthcheck | jq -r .message || exit 1
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: unless-stopped
    mem_limit: 200m

  # Tailscales

  ts-dashy:
    image: tailscale/tailscale:latest
    container_name: ts-dashy
    hostname: dashy
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/dashy.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/dashy.json:/config/dashy.json
      - ts-dashy:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-jellyfin:
    image: tailscale/tailscale:latest
    container_name: ts-jellyfin
    hostname: jellyfin
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/jellyfin.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/jellyfin.json:/config/jellyfin.json
      - ts-jellyfin:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-glances:
    image: tailscale/tailscale:latest
    container_name: ts-glances
    hostname: glances-calliope
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/glances.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/glances.json:/config/glances.json
      - ts-glances:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-qbittorrent:
    image: tailscale/tailscale:latest
    container_name: ts-qbittorrent
    hostname: torrent
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/qbittorrent.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/qbittorrent.json:/config/qbittorrent.json
      - ts-qbittorrent:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-dozzle:
    image: tailscale/tailscale:latest
    container_name: ts-dozzle
    hostname: dozzle-calliope
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/dozzle.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/dozzle.json:/config/dozzle.json
      - ts-dozzle:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-it-tools:
    image: tailscale/tailscale:latest
    container_name: ts-it-tools
    hostname: it-tools
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/it-tools.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/it-tools.json:/config/it-tools.json
      - ts-it-tools:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-filebrowser:
    image: tailscale/tailscale:latest
    container_name: ts-filebrowser
    hostname: filebrowser
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/filebrowser.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/filebrowser.json:/config/filebrowser.json
      - ts-filebrowser:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-grist:
    image: tailscale/tailscale:latest
    container_name: ts-grist
    hostname: sheets
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/grist.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/grist.json:/config/grist.json
      - ts-grist:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

  ts-speedtest:
    image: tailscale/tailscale:latest
    container_name: ts-speedtest
    hostname: speedtest-calliope
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTHKEY=${TS_AUTHKEY:?error}
      - TS_EXTRA_ARGS=--reset
      - TS_SERVE_CONFIG=/config/speedtest.json
      - TS_USERSPACE=false
    volumes:
      - ./tailscale/speedtest.json:/config/speedtest.json
      - ts-speedtest:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
    restart: unless-stopped
    mem_limit: 200m

volumes:
  dashy-app:
  grist_data:
  ts-dashy:
  ts-jellyfin:
  ts-glances:
  ts-qbittorrent:
  ts-dozzle:
  ts-it-tools:
  ts-filebrowser:
  ts-grist:
  ts-speedtest:
  qbittorrent-config:
  jellyfin-config:
  jellyfin-cache:
